/* Generated by Nim Compiler v1.6.11 */
#ifndef __libwaku__
#define __libwaku__
#define NIM_INTBITS 64

#include "nimbase.h"
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
typedef struct NimStringDesc NimStringDesc;
typedef struct TGenericSeq TGenericSeq;
typedef N_CDECL_PTR(void, tyProc__Kqd4TNhMGEmsA9aPDh1zGDw) (char* msg, size_t len_0);
struct TGenericSeq {NI len;
NI reserved;
};
struct NimStringDesc {  TGenericSeq Sup;NIM_CHAR data[SEQ_DECL_SIZE];
};

#ifdef __cplusplus
extern "C" {
#endif
N_LIB_PRIVATE N_NOCONV(void, signalHandler)(int sign);
N_LIB_PRIVATE N_NIMCALL(NI, getRefcount)(void* p);
N_LIB_IMPORT N_CDECL(int, waku_new)(char* configJson, tyProc__Kqd4TNhMGEmsA9aPDh1zGDw onErrCb);
N_LIB_IMPORT N_CDECL(char*, waku_version)(void);
N_LIB_IMPORT N_CDECL(void, waku_set_relay_callback)(tyProc__Kqd4TNhMGEmsA9aPDh1zGDw callback);
N_LIB_IMPORT N_CDECL(void, waku_content_topic)(NCSTRING appName, NU appVersion, NCSTRING contentTopicName, NCSTRING encoding, NimStringDesc** outContentTopic);
N_LIB_IMPORT N_CDECL(int, waku_pubsub_topic)(char* topicName, tyProc__Kqd4TNhMGEmsA9aPDh1zGDw onOkCb);
N_LIB_IMPORT N_CDECL(char*, waku_default_pubsub_topic)(void);
N_LIB_IMPORT N_CDECL(NIM_BOOL, waku_relay_publish)(NCSTRING pubSubTopic, NCSTRING jsonWakuMessage, NI timeoutMs, NimStringDesc** jsonResp);
N_LIB_IMPORT N_CDECL(void, waku_start)(void);
N_LIB_IMPORT N_CDECL(void, waku_stop)(void);
N_LIB_IMPORT N_CDECL(NIM_BOOL, waku_relay_subscribe)(NCSTRING pubSubTopic, NimStringDesc** jsonResp);
N_LIB_IMPORT N_CDECL(NIM_BOOL, waku_relay_unsubscribe)(NCSTRING pubSubTopic, NimStringDesc** jsonResp);
N_LIB_IMPORT N_CDECL(NIM_BOOL, waku_connect)(NCSTRING peerMultiAddr, NU timeoutMs, NimStringDesc** jsonResp);
N_LIB_IMPORT N_CDECL(void, waku_poll)(void);
N_LIB_IMPORT N_CDECL(void, NimMain)(void);

#ifdef __cplusplus
}
#endif

#endif /* __libwaku__ */
